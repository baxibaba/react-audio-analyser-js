{"version":3,"sources":["../../src/component/AudioAnalyser/RenderCanvas.js"],"names":["React","RenderCanvas","props","renderCurve","height","width","animationId","window","requestAnimationFrame","bufferLength","analyser","fftSize","dataArray","Uint8Array","getByteTimeDomainData","configCanvas","sliceWidth","Number","x","canvasCtx","moveTo","i","v","y","lineTo","stroke","canvasRef","createRef","initCanvas","cancelAnimationFrame","backgroundColor","strokeColor","canvas","current","getContext","clearRect","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","Target"],"mappings":"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","file":"RenderCanvas.js","sourcesContent":["/**\r\n * Created by j_bleach on 2018/8/6.\r\n */\r\nimport React from \"react\";\r\n\r\nconst RenderCanvas = Target => {\r\n    return class RenderCanvasClass extends Target {\r\n\r\n        constructor(props) {\r\n            super(props)\r\n            this.canvasRef = React.createRef() // react ref\r\n            this.canvasCtx = null; // canvas 上下文\r\n            this.animationId = null;\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.initCanvas();\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            window.cancelAnimationFrame(this.animationId); //组件销毁前，注销定时动画\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe canvas 配置\r\n         */\r\n        configCanvas() {\r\n            const {height, width, backgroundColor, strokeColor} = this.props;\r\n            const canvas = this.canvasRef.current;\r\n            this.canvasCtx = canvas.getContext(\"2d\");\r\n            this.canvasCtx.clearRect(0, 0, width, height);\r\n            this.canvasCtx.fillStyle = backgroundColor;\r\n            this.canvasCtx.fillRect(0, 0, width, height);\r\n            this.canvasCtx.lineWidth = 2;\r\n            this.canvasCtx.strokeStyle = strokeColor;\r\n            this.canvasCtx.beginPath();\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe 画布初始化,停止动画\r\n         */\r\n        initCanvas() {\r\n            window.cancelAnimationFrame(this.animationId);\r\n            const {height, width} = this.props;\r\n            this.configCanvas();\r\n            this.canvasCtx.moveTo(0, height / 2);\r\n            this.canvasCtx.lineTo(width, height / 2);\r\n            this.canvasCtx.stroke();\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe 动态绘制音频曲线\r\n         */\r\n        renderCurve = () => {\r\n            const {height, width} = this.props;\r\n            this.animationId = window.requestAnimationFrame(this.renderCurve); // 定时动画\r\n            const bufferLength = this.analyser.fftSize; // 默认为2048\r\n            const dataArray = new Uint8Array(bufferLength);\r\n            // console.log(\"data\",dataArray)\r\n            this.analyser.getByteTimeDomainData(dataArray);// 将音频信息存储在长度为2048（默认）的类型数组（dataArray）\r\n            this.configCanvas();\r\n            const sliceWidth = Number(width) / bufferLength;\r\n            let x = 0;\r\n            this.canvasCtx.moveTo(x, height / 2);\r\n            for (let i = 0; i < bufferLength; i++) {\r\n                const v = dataArray[i] / 128.0;\r\n                const y = v * height / 2;\r\n                this.canvasCtx[\"lineTo\"](x, y);\r\n                x += sliceWidth;\r\n            }\r\n            this.canvasCtx.lineTo(width, height / 2);\r\n            this.canvasCtx.stroke();\r\n        }\r\n\r\n        /**\r\n         * @author j_bleach 2018/8/18\r\n         * @describe 初始化渲染canvas节点\r\n         */\r\n        renderCanvas() {\r\n            const {height, width} = this.props;\r\n            return <canvas ref={this.canvasRef} height={height} width={width}\r\n                           style={{width: width, height: height}}/>\r\n        }\r\n    }\r\n}\r\nexport default RenderCanvas;\r\n"]}